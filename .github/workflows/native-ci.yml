name: native-ci

on:
  push:
  pull_request:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Project test deps (native-only)
          pip install pytest pytest-cov networkx pyyaml pandas numpy==1.26.4

      - name: Run native and legal unit tests with coverage
        run: |
          if [ -d tests/native ] && [ -d tests/legal ]; then
            pytest -q --cov=. --cov-report=term-missing --cov-fail-under=80 tests/native tests/legal
          elif [ -d tests/native ]; then
            pytest -q --cov=. --cov-report=term-missing --cov-fail-under=80 tests/native
          elif [ -d tests/legal ]; then
            pytest -q --cov=. --cov-report=term-missing --cov-fail-under=80 tests/legal
          else
            pytest -q --cov=. --cov-report=term-missing --cov-fail-under=80
          fi

  parity-smoke:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f pyreason/requirements.txt ]; then pip install -r pyreason/requirements.txt || true; fi
          pip install pytest networkx pyyaml pandas numpy==1.26.4

      - name: Run parity smoke (skips gracefully if legal catalog unavailable)
        env:
          NATIVE_ENGINE_EMIT_FACTS: "1"
          LEGAL_ENGINE_IMPL: "pyreason"
        run: |
          if [ -f tests/native/test_parity.py ]; then pytest -q tests/native/test_parity.py -q || echo "parity smoke skipped/non-fatal"; else echo "no parity test present"; fi