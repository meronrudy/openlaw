name: Native Engine - Tests and Parity

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies (minimal)
        run: |
          python -m pip install --upgrade pip
          # Core project deps
          if [ -f "pyproject.toml" ]; then
            pip install -e .
          fi
          # Test deps
          pip install pytest
          # Optional: do not install PyReason heavy deps here; parity tests skip if unavailable

      - name: Run unit tests (native)
        env:
          # Ensure native engine remains privacy-safe by default
          NATIVE_ENGINE_EMIT_FACTS: "0"
        run: |
          pytest -q tests/native/test_intervals.py tests/native/test_native_suite.py || exit 1

      - name: Run parity tests (skip gracefully if PyReason not available)
        env:
          # Emit native facts for parity when/if tests run
          NATIVE_ENGINE_EMIT_FACTS: "1"
          # Force bridge baseline to PyReason for parity generation; tests will skip if PyReason not present
          LEGAL_ENGINE_IMPL: "pyreason"
        run: |
          # These tests are decorated to skip when PyReason env or legal rule catalog is not available.
          pytest -q tests/native/test_parity.py || true
          pytest -q tests/native/test_golden_parity.py || true

  # Optional benchmark job (smoke); does not gate PRs
  benchmark:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install benchmark deps
        run: |
          python -m pip install --upgrade pip
          pip install psutil
          if [ -f "pyproject.toml" ]; then
            pip install -e .
          fi

      - name: Run native benchmark smoke
        run: |
          python scripts/bench/native_bench.py || true