[tool:pytest]
# pytest configuration for legal hypergraph system testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async testing configuration
asyncio_mode = auto

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --durations=10
    --color=yes
    --junit-xml=test-results.xml
    --cov=core
    --cov=sdk
    --cov=plugins
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end tests for complete workflows
    performance: Performance and scalability tests
    security: Security and compliance tests
    slow: Tests that take more than 30 seconds
    legal_domain: Tests specific to legal domain functionality
    plugin: Tests for plugin system functionality
    provenance: Tests for provenance tracking and validation
    reasoning: Tests for legal reasoning engine
    nlp: Tests for legal NLP pipeline
    ada: Tests specific to ADA compliance
    flsa: Tests specific to FLSA compliance
    workers_comp: Tests specific to workers compensation
    at_will: Tests specific to at-will employment
    multi_domain: Tests involving multiple legal domains

# Minimum version requirements
minversion = 7.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:transformers.*
    error::FutureWarning
    
# Test timeout (in seconds)
timeout = 300

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto

# Environment variables for testing
env = 
    LEGAL_HYPERGRAPH_ENV = test
    LEGAL_HYPERGRAPH_LOG_LEVEL = INFO
    LEGAL_HYPERGRAPH_PLUGIN_DIR = tests/fixtures/plugins